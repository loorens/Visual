<Window x:Class="WpfApplication2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:WpfApplication2"
        Title="MainWindow" Height="350" Width="525">
    <Window.Resources>
        <local:VerticalMarginConverter x:Key="VerticalMarginConverter"/>
    </Window.Resources>
    <DockPanel>
        <TextBlock DockPanel.Dock="Top" TextWrapping="Wrap" Margin="5">
            Resize the Window to see the resolution-independence. Red highlight "Indicators" are properly positioned.
            Pure DataBinding-based solution. Click in the CheckBoxes (then move away from the row to commit the change) and see how red highlights are toggled.
            Your solution does not do that and it has much more code.
            Mine is only 3 lines of C# code (excluding the boilerplate code behind and the Data Item which should be defined anyways) and a couple of lines of declarative XAML.
            No "owner-draw" crap. No P/Invoke crap. <Bold>No winforms retarded useless bullshit.</Bold>
        </TextBlock>
        <Grid>
            <DataGrid ItemsSource="{Binding}"
                  VerticalScrollBarVisibility="Visible"/>
            <ItemsControl ItemsSource="{Binding}" HorizontalAlignment="Right" Margin="0,42,2,17" Width="15" IsHitTestVisible="False">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="VerticalAlignment" Value="Top"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle x:Name="Rect" Stroke="Red" StrokeThickness="1" Height="1" Visibility="Collapsed">
                            <Rectangle.Margin>
                                <MultiBinding Converter="{StaticResource VerticalMarginConverter}">
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorType=Window}"/>
                                    <Binding/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType=ItemsControl}"/>
                                </MultiBinding>
                            </Rectangle.Margin>
                        </Rectangle>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                                <Setter TargetName="Rect" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </DockPanel>
</Window>
